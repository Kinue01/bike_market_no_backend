{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as yup from 'yup';\nimport User from '../models/user';\nexport default {\n  name: 'Login-comp',\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\"),\n      password: yup.string().required(\"Password is required!\")\n    });\n    return {\n      loading: false,\n      message: \"\",\n      schema,\n      user_login: \"\",\n      user_password: \"\",\n      user: new User(this.user_login, this.user_password)\n    };\n  },\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n  },\n  created() {\n    if (this.loggedIn) {\n      this.$router.push('/profile');\n    }\n  },\n  methods: {\n    handleLogin() {\n      this.loading = true;\n      let user = this.$store.dispatch(\"auth/login\", this.user).then(() => {\n        this.$router.push('/profile');\n      }, error => {\n        this.loading = false;\n        this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    }\n  }\n};","map":{"version":3,"names":["yup","User","name","data","schema","object","shape","username","string","required","password","loading","message","user_login","user_password","user","computed","loggedIn","$store","state","auth","status","created","$router","push","methods","handleLogin","dispatch","then","error","response","toString"],"sources":["C:\\Users\\tverd\\Рабочий стол\\bikeMarket\\bike-market\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"container bg-white p-5 shadow my-5\">\r\n        <p class=\"text-center fs-1\">Вход</p>\r\n        <form :validation-schema=\"schema\">\r\n            <div class=\"mt-3\">\r\n                <label for=\"user_login\" class=\"form-label\">Username</label>\r\n                <input name=\"user_login\" type=\"text\" class=\"form-control\" v-model=\"user_login\" />\r\n                <label name=\"user_login\" class=\"error-feedback\" />\r\n            </div>\r\n            <div class=\"mt-3\">\r\n                <label for=\"user_password\" class=\"form-label\">Password</label>\r\n                <input name=\"user_password\" type=\"password\" class=\"form-control\" v-model=\"user_password\" />\r\n                <label name=\"user_password\" class=\"error-feedback\" />\r\n            </div>\r\n\r\n            <div class=\"mt-3\">\r\n                <button class=\"btn btn-primary btn-block\" :disabled=\"loading\" @click=\"handleLogin\" >\r\n                    <span v-show=\"loading\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span>Login</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"mt-3\">\r\n                <div v-if=\"message\" role=\"alert\" class=\"alert alert-danger\">\r\n                    {{ message }}\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as yup from 'yup';\r\nimport User from '../models/user'\r\n\r\nexport default {\r\n    name: 'Login-comp',\r\n    data(){\r\n        const schema = yup.object().shape({\r\n            username: yup.string().required(\"Username is required!\"),\r\n            password: yup.string().required(\"Password is required!\"),\r\n        });\r\n        return{\r\n            loading: false,\r\n            message: \"\",\r\n            schema,\r\n            user_login: \"\",\r\n            user_password: \"\",\r\n            user: new User(this.user_login, this.user_password)\r\n        };\r\n    },\r\n    computed:{\r\n        loggedIn(){\r\n            return this.$store.state.auth.status.loggedIn;\r\n        }\r\n    },\r\n    created(){\r\n        if(this.loggedIn){\r\n            this.$router.push('/profile');\r\n        }\r\n    },\r\n    methods:{\r\n        handleLogin() {\r\n            this.loading = true;\r\n\r\n            let user = \r\n            this.$store.dispatch(\"auth/login\", this.user)\r\n            .then(() => {\r\n                this.$router.push('/profile');\r\n            },\r\n            error => {\r\n                this.loading = false;\r\n                this.message =\r\n                    (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";AAgCA,OAAO,KAAKA,GAAE,MAAO,KAAK;AAC1B,OAAOC,IAAG,MAAO,gBAAe;AAEhC,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAE;IACF,MAAMC,MAAK,GAAIJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;MAC9BC,QAAQ,EAAEP,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,uBAAuB,CAAC;MACxDC,QAAQ,EAAEV,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,uBAAuB;IAC3D,CAAC,CAAC;IACF,OAAM;MACFE,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAE;MACXR,MAAM;MACNS,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE,EAAE;MACjBC,IAAI,EAAE,IAAId,IAAI,CAAC,IAAI,CAACY,UAAU,EAAE,IAAI,CAACC,aAAa;IACtD,CAAC;EACL,CAAC;EACDE,QAAQ,EAAC;IACLC,QAAQA,CAAA,EAAE;MACN,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACJ,QAAQ;IACjD;EACJ,CAAC;EACDK,OAAOA,CAAA,EAAE;IACL,IAAG,IAAI,CAACL,QAAQ,EAAC;MACb,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IACjC;EACJ,CAAC;EACDC,OAAO,EAAC;IACJC,WAAWA,CAAA,EAAG;MACV,IAAI,CAACf,OAAM,GAAI,IAAI;MAEnB,IAAII,IAAG,GACP,IAAI,CAACG,MAAM,CAACS,QAAQ,CAAC,YAAY,EAAE,IAAI,CAACZ,IAAI,EAC3Ca,IAAI,CAAC,MAAM;QACR,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;MACjC,CAAC,EACDK,KAAI,IAAK;QACL,IAAI,CAAClB,OAAM,GAAI,KAAK;QACpB,IAAI,CAACC,OAAM,GACNiB,KAAK,CAACC,QAAO,IACdD,KAAK,CAACC,QAAQ,CAAC3B,IAAG,IAClB0B,KAAK,CAACC,QAAQ,CAAC3B,IAAI,CAACS,OAAO,IAC3BiB,KAAK,CAACjB,OAAM,IACZiB,KAAK,CAACE,QAAQ,CAAC,CAAC;MACxB,CAAC,CAAC;IACN;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}