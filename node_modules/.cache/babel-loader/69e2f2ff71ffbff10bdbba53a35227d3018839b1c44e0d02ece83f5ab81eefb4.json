{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"jumbotron\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"header\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.content, item => {\n    return _openBlock(), _createElementBlock(\"h3\", {\n      key: item\n    }, _toDisplayString($data.content), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","content","item","key","_toDisplayString"],"sources":["C:\\Users\\tverd\\Рабочий стол\\bikeMarket\\bike-market\\src\\components\\BoardUser.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <header class=\"jumbotron\">\r\n            <h3 v-for=\"item in content\" :key=\"item\">\r\n                {{ content }}</h3>\r\n        </header>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n//import UserService from \"../services/user.service\";\r\n//import EventBus from \"../common/EventBus\";\r\n\r\nexport default {\r\n    name: 'User-comp',\r\n    data(){\r\n        return{\r\n            content: \"\"\r\n        };\r\n    },\r\n    mounted(){\r\n\r\n        this.content = JSON.parse(localStorage.getItem(\"user\"));\r\n        /*UserService.getUserBoard().then(\r\n            (response) => {\r\n                this.content = response.data;\r\n            },\r\n            (error) => {\r\n                this.content = (error.response && error.response.data && error.response.data.message) || error.message || error.toString();\r\n\r\n                if(error.response && error.response.status === 403){\r\n                    EventBus.dispatch('logout');\r\n                }\r\n            }\r\n        );*/\r\n    }\r\n}\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;EACVA,KAAK,EAAC;AAAW;;uBAD7BC,mBAAA,CAKM,OALNC,UAKM,GAJFC,mBAAA,CAGS,UAHTC,UAGS,I,kBAFLH,mBAAA,CACsBI,SAAA,QAAAC,WAAA,CADHC,KAAA,CAAAC,OAAO,EAAfC,IAAI;yBAAfR,mBAAA,CACsB;MADOS,GAAG,EAAED;IAAI,GAAAE,gBAAA,CAC/BJ,KAAA,CAAAC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}