{"ast":null,"code":"import axiosInstance from \"./api\";\nimport TokenService from \"../token.service\";\nconst setup = store => {\n  axiosInstance.interceptors.request.use(config => {\n    const token = TokenService.getLocalAccessToken();\n    if (token) {\n      config.headers[\"Authorization\"] = 'Bearer ' + token;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  axiosInstance.interceptors.response.use(res => {\n    return res;\n  }, async err => {\n    const originalConfig = err.config;\n    if (originalConfig.url !== '/auth/signin' && err.response) {\n      if (err.response.status === 401 && !originalConfig._retry) {\n        originalConfig._retry = true;\n        try {\n          const rs = await axiosInstance.post(\"/auth/refreshtoken\", {\n            refreshToken: TokenService.getLocalRefreshToken()\n          });\n          const {\n            accessToken\n          } = rs.data;\n          store.dispatch('auth/refreshToken', accessToken);\n          TokenService.updateLocalAccessToken(accessToken);\n          return axiosInstance(originalConfig);\n        } catch (_error) {\n          return Promise.reject(_error);\n        }\n      }\n    }\n    return Promise.reject(err);\n  });\n};\nexport default setup;","map":{"version":3,"names":["axiosInstance","TokenService","setup","store","interceptors","request","use","config","token","getLocalAccessToken","headers","error","Promise","reject","response","res","err","originalConfig","url","status","_retry","rs","post","refreshToken","getLocalRefreshToken","accessToken","data","dispatch","updateLocalAccessToken","_error"],"sources":["C:/Users/tverd/Рабочий стол/bikeMarket/bike-market/src/services/setupInterceptors.js"],"sourcesContent":["import axiosInstance from \"./api\";\r\nimport TokenService from \"../token.service\";\r\n\r\nconst setup = (store) => {\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            const token = TokenService.getLocalAccessToken();\r\n            if(token){\r\n                config.headers[\"Authorization\"] = 'Bearer ' + token;\r\n            }\r\n            return config;\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error);\r\n        }\r\n    );\r\n\r\n    axiosInstance.interceptors.response.use(\r\n        (res) => {\r\n            return res;\r\n        },\r\n        async (err) => {\r\n            const originalConfig = err.config;\r\n\r\n            if(originalConfig.url !== '/auth/signin' && err.response){\r\n                if (err.response.status === 401 && !originalConfig._retry) {\r\n                    originalConfig._retry = true;\r\n\r\n                    try{\r\n                        const rs = await axiosInstance.post(\"/auth/refreshtoken\", {\r\n                            refreshToken: TokenService.getLocalRefreshToken()\r\n                        });\r\n\r\n                        const { accessToken } = rs.data;\r\n\r\n                        store.dispatch('auth/refreshToken', accessToken);\r\n                        TokenService.updateLocalAccessToken(accessToken);\r\n\r\n                        return axiosInstance(originalConfig);\r\n                    }\r\n                    catch (_error) {\r\n                        return Promise.reject(_error);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return Promise.reject(err);\r\n        }\r\n    );\r\n};\r\n\r\nexport default setup;"],"mappings":"AAAA,OAAOA,aAAa,MAAM,OAAO;AACjC,OAAOC,YAAY,MAAM,kBAAkB;AAE3C,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACrBH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAK;IACR,MAAMC,KAAK,GAAGP,YAAY,CAACQ,mBAAmB,CAAC,CAAC;IAChD,IAAGD,KAAK,EAAC;MACLD,MAAM,CAACG,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGF,KAAK;IACvD;IACA,OAAOD,MAAM;EACjB,CAAC,EACAI,KAAK,IAAK;IACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAChC,CACJ,CAAC;EAEDX,aAAa,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAClCS,GAAG,IAAK;IACL,OAAOA,GAAG;EACd,CAAC,EACD,MAAOC,GAAG,IAAK;IACX,MAAMC,cAAc,GAAGD,GAAG,CAACT,MAAM;IAEjC,IAAGU,cAAc,CAACC,GAAG,KAAK,cAAc,IAAIF,GAAG,CAACF,QAAQ,EAAC;MACrD,IAAIE,GAAG,CAACF,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAI,CAACF,cAAc,CAACG,MAAM,EAAE;QACvDH,cAAc,CAACG,MAAM,GAAG,IAAI;QAE5B,IAAG;UACC,MAAMC,EAAE,GAAG,MAAMrB,aAAa,CAACsB,IAAI,CAAC,oBAAoB,EAAE;YACtDC,YAAY,EAAEtB,YAAY,CAACuB,oBAAoB,CAAC;UACpD,CAAC,CAAC;UAEF,MAAM;YAAEC;UAAY,CAAC,GAAGJ,EAAE,CAACK,IAAI;UAE/BvB,KAAK,CAACwB,QAAQ,CAAC,mBAAmB,EAAEF,WAAW,CAAC;UAChDxB,YAAY,CAAC2B,sBAAsB,CAACH,WAAW,CAAC;UAEhD,OAAOzB,aAAa,CAACiB,cAAc,CAAC;QACxC,CAAC,CACD,OAAOY,MAAM,EAAE;UACX,OAAOjB,OAAO,CAACC,MAAM,CAACgB,MAAM,CAAC;QACjC;MACJ;IACJ;IAEA,OAAOjB,OAAO,CAACC,MAAM,CAACG,GAAG,CAAC;EAC9B,CACJ,CAAC;AACL,CAAC;AAED,eAAed,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}