{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as yup from 'yup';\nexport default {\n  name: 'Login-comp',\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\"),\n      password: yup.string().required(\"Password is required!\")\n    });\n    return {\n      loading: false,\n      message: \"\",\n      schema,\n      user: {\n        username: \"\",\n        password: \"\"\n      }\n    };\n  },\n  computed: {\n    loggedIn() {\n      return this.$store.state.status.loggedIn;\n    }\n  },\n  created() {\n    if (this.loggedIn) {\n      this.$router.push('/profile');\n    }\n  },\n  methods: {\n    async handleLogin() {\n      this.loading = true;\n      if (this.user.username && this.user.password) {\n        const response = await fetch(`http://localhost:8000/api/user`, {\n          mode: \"cors\",\n          body: {\n            user_login: this.user.username,\n            user_password: this.user.password\n          }\n        });\n        await response.json().then(data => {\n          this.$store.dispatch('login', data).then();\n          this.$router.push('/profile');\n          this.loading = false;\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["yup","name","data","schema","object","shape","username","string","required","password","loading","message","user","computed","loggedIn","$store","state","status","created","$router","push","methods","handleLogin","response","fetch","mode","body","user_login","user_password","json","then","dispatch"],"sources":["C:\\Users\\tverd\\Рабочий стол\\bikeMarket\\bike-market\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"container bg-white p-5 shadow my-5\">\r\n        <p class=\"text-center fs-1\">Вход</p>\r\n        <form @submit=\"handleLogin\" :validation-schema=\"schema\">\r\n            <div class=\"mt-3\">\r\n                <label for=\"username\" class=\"form-label\">Username</label>\r\n                <input name=\"username\" type=\"text\" class=\"form-control\" v-model=\"user.username\" />\r\n                <label name=\"username\" class=\"error-feedback\" />\r\n            </div>\r\n            <div class=\"mt-3\">\r\n                <label for=\"password\" class=\"form-label\">Password</label>\r\n                <input name=\"password\" type=\"password\" class=\"form-control\" v-model=\"user.password\" />\r\n                <label name=\"password\" class=\"error-feedback\" />\r\n            </div>\r\n\r\n            <div class=\"mt-3\">\r\n                <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\r\n                    <span v-show=\"loading\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span>Login</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"mt-3\">\r\n                <div v-if=\"message\" role=\"alert\" class=\"alert alert-danger\">\r\n                    {{ message }}\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as yup from 'yup';\r\n\r\nexport default {\r\n    name: 'Login-comp',\r\n    data(){\r\n        const schema = yup.object().shape({\r\n            username: yup.string().required(\"Username is required!\"),\r\n            password: yup.string().required(\"Password is required!\"),\r\n        });\r\n        return{\r\n            loading: false,\r\n            message: \"\",\r\n            schema,\r\n            user: {\r\n                username: \"\",\r\n                password: \"\"\r\n            }\r\n        };\r\n    },\r\n    computed:{\r\n        loggedIn(){\r\n            return this.$store.state.status.loggedIn;\r\n        }\r\n    },\r\n    created(){\r\n        if(this.loggedIn){\r\n            this.$router.push('/profile');\r\n        }\r\n    },\r\n    methods:{\r\n        async handleLogin() {\r\n            this.loading = true;\r\n\r\n            if (this.user.username && this.user.password) {\r\n\r\n                const response = await fetch(`http://localhost:8000/api/user`, {\r\n                    mode: \"cors\",\r\n                    body: {\r\n                        user_login: this.user.username,\r\n                        user_password: this.user.password\r\n                    }\r\n                });\r\n\r\n                await response.json().then(data => {\r\n                    this.$store.dispatch('login', data).then()\r\n                    this.$router.push('/profile');\r\n                    this.loading = false;\r\n                });\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";AAgCA,OAAO,KAAKA,GAAE,MAAO,KAAK;AAE1B,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAE;IACF,MAAMC,MAAK,GAAIH,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;MAC9BC,QAAQ,EAAEN,GAAG,CAACO,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,uBAAuB,CAAC;MACxDC,QAAQ,EAAET,GAAG,CAACO,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,uBAAuB;IAC3D,CAAC,CAAC;IACF,OAAM;MACFE,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAE;MACXR,MAAM;MACNS,IAAI,EAAE;QACFN,QAAQ,EAAE,EAAE;QACZG,QAAQ,EAAE;MACd;IACJ,CAAC;EACL,CAAC;EACDI,QAAQ,EAAC;IACLC,QAAQA,CAAA,EAAE;MACN,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,CAACH,QAAQ;IAC5C;EACJ,CAAC;EACDI,OAAOA,CAAA,EAAE;IACL,IAAG,IAAI,CAACJ,QAAQ,EAAC;MACb,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IACjC;EACJ,CAAC;EACDC,OAAO,EAAC;IACJ,MAAMC,WAAWA,CAAA,EAAG;MAChB,IAAI,CAACZ,OAAM,GAAI,IAAI;MAEnB,IAAI,IAAI,CAACE,IAAI,CAACN,QAAO,IAAK,IAAI,CAACM,IAAI,CAACH,QAAQ,EAAE;QAE1C,MAAMc,QAAO,GAAI,MAAMC,KAAK,CAAE,gCAA+B,EAAE;UAC3DC,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;YACFC,UAAU,EAAE,IAAI,CAACf,IAAI,CAACN,QAAQ;YAC9BsB,aAAa,EAAE,IAAI,CAAChB,IAAI,CAACH;UAC7B;QACJ,CAAC,CAAC;QAEF,MAAMc,QAAQ,CAACM,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC5B,IAAG,IAAK;UAC/B,IAAI,CAACa,MAAM,CAACgB,QAAQ,CAAC,OAAO,EAAE7B,IAAI,CAAC,CAAC4B,IAAI,CAAC;UACzC,IAAI,CAACX,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;UAC7B,IAAI,CAACV,OAAM,GAAI,KAAK;QACxB,CAAC,CAAC;MAEN;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}