{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container my-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"\"\n}, \"Users from database\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Login\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Role ID\")])], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  scope: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: user.user_id\n    }, [_createElementVNode(\"th\", _hoisted_5, _toDisplayString(user.user_id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.user_login), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.user_role_id), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","scope","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","users","user","key","user_id","_hoisted_5","_toDisplayString","user_login","user_role_id"],"sources":["C:\\Users\\tverd\\Рабочий стол\\bikeMarket\\bike-market\\src\\components\\AdminBoard.vue"],"sourcesContent":["<template>\r\n    <div class=\"container my-5\">\r\n        <p class=\"\">Users from database</p>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Login</th>\r\n                    <th scope=\"col\">Role ID</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"user in users\" :key=\"user.user_id\">\r\n                    <th scope=\"row\">{{ user.user_id }}</th>\r\n                    <td>{{ user.user_login }}</td>\r\n                    <td>{{ user.user_role_id }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default {\r\n    name: \"Adm-Board\",\r\n    data(){\r\n        return{\r\n            users: {}\r\n        }\r\n    },\r\n    mounted() {\r\n        UserService.getUsers()\r\n        .then(response => {\r\n            this.users = response.data;\r\n        },\r\n        error => {\r\n            this.message = \r\n            (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        });\r\n    }\r\n}\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;gCACvBC,mBAAA,CAAmC;EAAhCD,KAAK,EAAC;AAAE,GAAC,qBAAmB;;EACxBA,KAAK,EAAC;AAAO;gCAChBC,mBAAA,CAMQ,gB,aALJA,mBAAA,CAIK,a,aAHDA,mBAAA,CAAuB;EAAnBC,KAAK,EAAC;AAAK,GAAC,IAAE,G,aAClBD,mBAAA,CAA0B;EAAtBC,KAAK,EAAC;AAAK,GAAC,OAAK,G,aACrBD,mBAAA,CAA4B;EAAxBC,KAAK,EAAC;AAAK,GAAC,SAAO,E;;EAKnBA,KAAK,EAAC;AAAK;;uBAZ/BC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBFC,UAAmC,EACnCJ,mBAAA,CAeQ,SAfRK,UAeQ,GAdJC,UAMQ,EACRN,mBAAA,CAMQ,iB,kBALJE,mBAAA,CAIKK,SAAA,QAAAC,WAAA,CAJcC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfT,mBAAA,CAIK;MAJsBU,GAAG,EAAED,IAAI,CAACE;QACjCb,mBAAA,CAAuC,MAAvCc,UAAuC,EAAAC,gBAAA,CAApBJ,IAAI,CAACE,OAAO,kBAC/Bb,mBAAA,CAA8B,YAAAe,gBAAA,CAAvBJ,IAAI,CAACK,UAAU,kBACtBhB,mBAAA,CAAgC,YAAAe,gBAAA,CAAzBJ,IAAI,CAACM,YAAY,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}