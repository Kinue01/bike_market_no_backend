{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as yup from \"yup\";\nexport default {\n  name: 'Register-comp',\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\").min(3, \"Must be at least 3 characters!\").max(20, \"Must be maximum 20 characters!\"),\n      email: yup.string().required(\"Email is required!\").email(\"Email is invalid!\").max(50, \"Must be maximum 50 characters!\"),\n      password: yup.string().required(\"Password is required!\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\")\n    });\n    return {\n      successful: false,\n      loading: false,\n      message: \"\",\n      schema\n    };\n  },\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n  },\n  mounted() {\n    if (this.loggedIn) {\n      this.$router.push('/profile');\n    }\n  },\n  methods: {\n    handleRegister() {\n      this.message = \"\";\n      this.successful = false;\n      this.loading = true;\n      this.$store.dispatch();\n    }\n  }\n};","map":{"version":3,"names":["yup","name","data","schema","object","shape","username","string","required","min","max","email","password","successful","loading","message","computed","loggedIn","$store","state","auth","status","mounted","$router","push","methods","handleRegister","dispatch"],"sources":["C:\\Users\\tverd\\Рабочий стол\\bikeMarket\\bike-market\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n    <div class=\"container bg-white my-5 p-5 shadow\">\r\n        <p class=\"text-center fs-1\">Регистрация</p>\r\n        <form @submit=\"handleRegister\" :validation-schema=\"schema\">\r\n            <div v-if=\"!successful\">\r\n                <div class=\"mt-3\">\r\n                    <label for=\"username\" class=\"form-label\">Username</label>\r\n                    <input name=\"username\" type=\"text\" class=\"form-control\" />\r\n                    <label name=\"username\" class=\"error-feedback\" />\r\n                </div>\r\n                <div class=\"mt-3\">\r\n                    <label for=\"email\" class=\"form-label\">Email</label>\r\n                    <input name=\"email\" type=\"email\" class=\"form-control\" />\r\n                    <label name=\"email\" class=\"error-feedback\" />\r\n                </div>\r\n                <div class=\"mt-3\">\r\n                    <label for=\"password\" class=\"form-label\">Password</label>\r\n                    <input name=\"password\" type=\"password\" class=\"form-control\" />\r\n                    <label name=\"password\" class=\"error-feedback\" />\r\n                </div>\r\n\r\n                <div class=\"mt-3\">\r\n                    <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\r\n                        <span v-show=\"loading\" class=\"spinner-border spinner-border-sm\"></span>\r\n                        Sign Up\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div v-if=\"message\" class=\"alert mt-3\" :class=\"successful ? 'alert-success' : 'alert-danger'\">\r\n            {{ message }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as yup from \"yup\";\r\n\r\nexport default{\r\n    name: 'Register-comp',\r\n    data(){\r\n        const schema = yup.object().shape({\r\n            username: yup\r\n                .string()\r\n                .required(\"Username is required!\")\r\n                .min(3, \"Must be at least 3 characters!\")\r\n                .max(20, \"Must be maximum 20 characters!\"),\r\n            email: yup\r\n                .string()\r\n                .required(\"Email is required!\")\r\n                .email(\"Email is invalid!\")\r\n                .max(50, \"Must be maximum 50 characters!\"),\r\n            password: yup\r\n                .string()\r\n                .required(\"Password is required!\")\r\n                .min(6, \"Must be at least 6 characters!\")\r\n                .max(40, \"Must be maximum 40 characters!\")\r\n        });\r\n        return{\r\n            successful: false,\r\n            loading: false,\r\n            message: \"\",\r\n            schema\r\n        };\r\n    },\r\n    computed: {\r\n        loggedIn() {\r\n            return this.$store.state.auth.status.loggedIn;\r\n        },\r\n    },\r\n    mounted(){\r\n        if(this.loggedIn){\r\n            this.$router.push('/profile');\r\n        }\r\n    },\r\n    methods:{\r\n        handleRegister(){\r\n            this.message = \"\";\r\n            this.successful = false;\r\n            this.loading = true;\r\n\r\n            this.$store.dispatch()\r\n\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";AAoCA,OAAO,KAAKA,GAAE,MAAO,KAAK;AAE1B,eAAc;EACVC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAE;IACF,MAAMC,MAAK,GAAIH,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;MAC9BC,QAAQ,EAAEN,GAAE,CACPO,MAAM,CAAC,EACPC,QAAQ,CAAC,uBAAuB,EAChCC,GAAG,CAAC,CAAC,EAAE,gCAAgC,EACvCC,GAAG,CAAC,EAAE,EAAE,gCAAgC,CAAC;MAC9CC,KAAK,EAAEX,GAAE,CACJO,MAAM,CAAC,EACPC,QAAQ,CAAC,oBAAoB,EAC7BG,KAAK,CAAC,mBAAmB,EACzBD,GAAG,CAAC,EAAE,EAAE,gCAAgC,CAAC;MAC9CE,QAAQ,EAAEZ,GAAE,CACPO,MAAM,CAAC,EACPC,QAAQ,CAAC,uBAAuB,EAChCC,GAAG,CAAC,CAAC,EAAE,gCAAgC,EACvCC,GAAG,CAAC,EAAE,EAAE,gCAAgC;IACjD,CAAC,CAAC;IACF,OAAM;MACFG,UAAU,EAAE,KAAK;MACjBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAE;MACXZ;IACJ,CAAC;EACL,CAAC;EACDa,QAAQ,EAAE;IACNC,QAAQA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACJ,QAAQ;IACjD;EACJ,CAAC;EACDK,OAAOA,CAAA,EAAE;IACL,IAAG,IAAI,CAACL,QAAQ,EAAC;MACb,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IACjC;EACJ,CAAC;EACDC,OAAO,EAAC;IACJC,cAAcA,CAAA,EAAE;MACZ,IAAI,CAACX,OAAM,GAAI,EAAE;MACjB,IAAI,CAACF,UAAS,GAAI,KAAK;MACvB,IAAI,CAACC,OAAM,GAAI,IAAI;MAEnB,IAAI,CAACI,MAAM,CAACS,QAAQ,CAAC;IAEzB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}