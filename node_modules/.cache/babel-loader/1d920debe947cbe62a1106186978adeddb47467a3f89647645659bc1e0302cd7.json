{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<p>Users from database</p><table class=\\\"table\\\"><thead><tr><th scope=\\\"col\\\">#</th><th scope=\\\"col\\\">First</th><th scope=\\\"col\\\">Last</th><th scope=\\\"col\\\">Handle</th></tr></thead><tbody><tr><th scope=\\\"row\\\">1</th><td>Mark</td><td>Otto</td><td>@mdo</td></tr><tr><th scope=\\\"row\\\">2</th><td>Jacob</td><td>Thornton</td><td>@fat</td></tr><tr><th scope=\\\"row\\\">3</th><td colspan=\\\"2\\\">Larry the Bird</td><td>@twitter</td></tr></tbody></table>\", 2);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _hoisted_1;\n}","map":{"version":3,"names":["_hoisted_1"],"sources":["C:\\Users\\tverd\\Рабочий стол\\bikeMarket\\bike-market\\src\\components\\AdminBoard.vue"],"sourcesContent":["<template>\r\n    <p>Users from database</p>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">First</th>\r\n                <th scope=\"col\">Last</th>\r\n                <th scope=\"col\">Handle</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <th scope=\"row\">1</th>\r\n                <td>Mark</td>\r\n                <td>Otto</td>\r\n                <td>@mdo</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td>Jacob</td>\r\n                <td>Thornton</td>\r\n                <td>@fat</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">3</th>\r\n                <td colspan=\"2\">Larry the Bird</td>\r\n                <td>@twitter</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script>\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default {\r\n    name: \"Adm-Board\",\r\n    data(){\r\n        return{\r\n            users: {}\r\n        }\r\n    },\r\n    mounted() {\r\n        UserService.getUsers()\r\n        .then(response => {\r\n            this.users = response.data;\r\n        },\r\n        error => {\r\n            this.message = \r\n            (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        });\r\n    }\r\n}\r\n</script>"],"mappings":";;;SACIA,UAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}