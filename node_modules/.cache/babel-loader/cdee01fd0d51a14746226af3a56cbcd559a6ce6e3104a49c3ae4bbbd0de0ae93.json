{"ast":null,"code":"import UserService from \"../services/user.service\";\nimport ItemService from \"@/services/item.service\";\nexport default {\n  name: \"Adm-Board\",\n  data() {\n    return {\n      message: \"\",\n      users: {},\n      items: {}\n    };\n  },\n  mounted() {\n    UserService.getUsers().then(response => {\n      this.users = response.data;\n    }, error => {\n      this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n    ItemService.getItems().then(response => {\n      this.items = response.data;\n    }, error => {\n      this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n  }\n};","map":{"version":3,"names":["UserService","ItemService","name","data","message","users","items","mounted","getUsers","then","response","error","toString","getItems"],"sources":["C:\\Users\\tverd\\Рабочий стол\\bikeMarket\\bike-market\\src\\components\\AdminBoard.vue"],"sourcesContent":["<template>\r\n    <div class=\"container my-5\">\r\n        <p class=\"fs-1 text-center\">Users from database</p>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Login</th>\r\n                    <th scope=\"col\">Role Id</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"user in users\" :key=\"user.user_id\">\r\n                    <th>{{ user.user_id }}</th>\r\n                    <td>{{ user.user_login }}</td>\r\n                    <td>{{ user.user_role_id }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <p class=\"mt-5 fs-1 text-center\">Items from database</p>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Description</th>\r\n                    <th scope=\"col\">Type Id</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"item in items\" :key=\"item.item_id\">\r\n                    <th>{{ item.i }}</th>\r\n                    <td>{{ user.user_login }}</td>\r\n                    <td>{{ user.user_role_id }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <p>{{ message }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport UserService from \"../services/user.service\";\r\nimport ItemService from \"@/services/item.service\";\r\n\r\nexport default {\r\n    name: \"Adm-Board\",\r\n    data(){\r\n        return{\r\n            message: \"\",\r\n            users: {},\r\n            items: {}\r\n        }\r\n    },\r\n    mounted() {\r\n        UserService.getUsers()\r\n        .then(response => {\r\n            this.users = response.data;\r\n        },\r\n        error => {\r\n            this.message = \r\n            (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        });\r\n\r\n        ItemService.getItems()\r\n        .then(response => {\r\n            this.items = response.data;\r\n        },\r\n        error => {\r\n            this.message = \r\n            (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n        });\r\n    }\r\n}\r\n</script>"],"mappings":"AA0CA,OAAOA,WAAU,MAAO,0BAA0B;AAClD,OAAOC,WAAU,MAAO,yBAAyB;AAEjD,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,CAAC,CAAC;MACTC,KAAK,EAAE,CAAC;IACZ;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACNP,WAAW,CAACQ,QAAQ,CAAC,EACpBC,IAAI,CAACC,QAAO,IAAK;MACd,IAAI,CAACL,KAAI,GAAIK,QAAQ,CAACP,IAAI;IAC9B,CAAC,EACDQ,KAAI,IAAK;MACL,IAAI,CAACP,OAAM,GACVO,KAAK,CAACD,QAAO,IACVC,KAAK,CAACD,QAAQ,CAACP,IAAG,IAClBQ,KAAK,CAACD,QAAQ,CAACP,IAAI,CAACC,OAAO,IAC/BO,KAAK,CAACP,OAAM,IACZO,KAAK,CAACC,QAAQ,CAAC,CAAC;IACpB,CAAC,CAAC;IAEFX,WAAW,CAACY,QAAQ,CAAC,EACpBJ,IAAI,CAACC,QAAO,IAAK;MACd,IAAI,CAACJ,KAAI,GAAII,QAAQ,CAACP,IAAI;IAC9B,CAAC,EACDQ,KAAI,IAAK;MACL,IAAI,CAACP,OAAM,GACVO,KAAK,CAACD,QAAO,IACVC,KAAK,CAACD,QAAQ,CAACP,IAAG,IAClBQ,KAAK,CAACD,QAAQ,CAACP,IAAI,CAACC,OAAO,IAC/BO,KAAK,CAACP,OAAM,IACZO,KAAK,CAACC,QAAQ,CAAC,CAAC;IACpB,CAAC,CAAC;EACN;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}